filter {
  if [type] == "drupal_syslog" {
    grok {
      match => { "message" => '%{SYSLOGBASE} %{URI:drupal_base_url}\|%{INT:drupal_unix_timestamp}\|%{DATA:drupal_category}\|%{IP:ip}\|%{URI:drupal_request_url}\|(?:%{URI:drupal_referrer}|)\|%{INT:drupal_uid}\|(?:%{URI:drupal_link}|)\|%{GREEDYDATA:drupal_message}' }
    }
    mutate {
      gsub => [ "drupal_category", "\s", "_"]
      add_field => { "signal" => "signal" }
      add_field => { "pool" => "poola" }
    }
    date {
      match => [ "drupal_unix_timestamp" , "UNIX" ]
      target => ["@timestamp"]
      add_tag => [ "tmatch" ]
    }
    if [drupal_category] == "page_not_found" or [drupal_category] == "access_denied" or [drupal_category] == "linkchecker" {
      mutate {
        replace => { "signal" => "interference" }
      }
    }
    if [drupal_category] == "cron" and "Cron run completed" in [drupal_message] {
      mutate {
        replace => { "signal" => "interference" }
      }
    }
    if [drupal_category] == "job_scheduler" and "Finished processing scheduled jobs" in [drupal_message] and "0 failed" in [drupal_message] {
      mutate {
        replace => { "signal" => "interference"}
      }
    }
    if "Did not delete temporary file"  in [drupal_message] and "during garbage collection, because it is in use" in [drupal_message] {
      mutate {
        replace => { "signal" => "interference"}
      }
    }
    if "More than one node exists for legacy_id:" in [drupal_message] {
      mutate {
        replace => { "signal" => "interference"}
      }
    }
    if "Cannot modify header information - headers already sent by" in [drupal_message] {
      mutate {
        replace => { "signal" => "noise"}
      }
    }
    if "Warning: Invalid argument supplied" in [drupal_message] {
      mutate {
        replace => { "signal" => "noise"}
      }
    }
    if "Warning: array_filter()" in [drupal_message] {
      mutate {
        replace => { "signal" => "noise"}
      }
    }
    if "Warning: join()" in [drupal_message] {
      mutate {
        replace => { "signal" => "noise"}
      }
    }
    if "Warning: date_format()" in [drupal_message] {
      mutate {
        replace => { "signal" => "noise"}
      }
    }
    if "Warning: date_timezone_set()" in [drupal_message] {
      mutate {
        replace => { "signal" => "noise"}
      }
    }
    if "Warning: Cannot use a scalar value as an array" in [drupal_message] {
      mutate {
        replace => { "signal" => "noise"}
      }
    }
  }
}
