filter {
  if [type] == "drupal_authentication" {
    grok {
      match => { "message" => '%{SYSLOGBASE} %{URI:drupal_base_url}\|%{INT:drupal_unix_timestamp}\|%{DATA:drupal_category}\|%{IP:ip}\|%{URI:drupal_request_url}\|(?:%{URI:drupal_referrer}|)\|%{INT:drupal_uid}\|(?:%{URI:drupal_link}|)\|%{GREEDYDATA:drupal_message}' }
    }
    mutate {
      gsub => [ "drupal_category", "\s", "_"]
      add_field => { "signal" => "signal" }
    }
    date {
      locale => "en"
      match => [ "timestamp" , "MMM dd HH:mm:ss" ]
      timezone => "America/Denver"
      target => ["@timestamp"]
      add_tag => [ "tmatch" ]
    }
    if [drupal_category] == "user" {
      grok {
        match => { "drupal_message" => "(?<junk>^.*Session opened for) %{USERNAME:identikey_username}."}
      }
      mutate {
        remove_field => [ "junk" ]
      }
    }
    if [drupal_message] == "Login attempt failed" {
      mutate {
        add_field => { "auth_outcome" => "Fail" }
      }
    }
    if [drupal_message] == "Session opened for" {
      mutate {
        add_field => { "auth_outcome" => "Success" }
      }
    }
  } else if [type] == "varnishncsa" {
    grok {
      match => [
        "message" => '%{IPORHOST:clientip} %{USER:ident} %{USER:auth} \[%{HTTPDATE:varnish_timestamp}\] \"%{WORD:verb} %{NOTSPACE:request} HTTP/%{NUMBER:httpversion}\" %{NUMBER:response} %{NUMBER:bytes} %{QS:referrer} %{QS:agent} %{QS:varnish_response} %{QS:varnish_backend} %{QS:varnish_f5_destination}'
      ]
    }
    mutate {
      convert => [ "bytes", "integer" ]
      add_field => { "signal" => "signal" }
    }
    if [agent] == "Pingdom.com_bot" {
      mutate {
        replace => { "signal" => "noise"}
      }
    }
    date{
      locale => "en"
      match =>["varnish_timestamp","dd/MM/yyyy:kk:mm:ss Z"]
      target => ["@timestamp"]
      add_tag => [ "tmatch" ]
    }
  } else if [logger] == "python-logstash-logger" {
    json {
      source => "message"
    }
  }
}
